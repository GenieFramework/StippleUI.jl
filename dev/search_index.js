var documenterSearchIndex = {"docs":
[{"location":"api/stippleui.html","page":"StippleUI","title":"StippleUI","text":"CurrentModule = StippleUI","category":"page"},{"location":"api/stippleui.html","page":"StippleUI","title":"StippleUI","text":"","category":"page"},{"location":"api/stippleui.html","page":"StippleUI","title":"StippleUI","text":"theme\ndeps\n@click","category":"page"},{"location":"api/stippleui.html#StippleUI.@click","page":"StippleUI","title":"StippleUI.@click","text":"`@click(expr)`\n\nDefines a js routine that is called by a click of the quasar component. If a symbol argument is supplied, @click sets this value to true.\n\n@click(\"savefile = true\") or @click(\"myjs_func();\") or @click(:button)\n\nModifers can be appended:\n\n@click(:me, :native)\n# \"v-on:click.native='me = true'\"\n\n\n\n\n\n","category":"macro"},{"location":"api/separators.html","page":"Separators","title":"Separators","text":"CurrentModule = Separators","category":"page"},{"location":"api/separators.html","page":"Separators","title":"Separators","text":"","category":"page"},{"location":"api/separators.html","page":"Separators","title":"Separators","text":"separator","category":"page"},{"location":"api/spinners.html","page":"Spinners","title":"Spinners","text":"CurrentModule = Spinners","category":"page"},{"location":"api/spinners.html","page":"Spinners","title":"Spinners","text":"","category":"page"},{"location":"api/spinners.html","page":"Spinners","title":"Spinners","text":"spinner","category":"page"},{"location":"api/uploaders.html","page":"Uploaders","title":"Uploaders","text":"CurrentModule = Uploaders","category":"page"},{"location":"api/uploaders.html","page":"Uploaders","title":"Uploaders","text":"","category":"page"},{"location":"api/uploaders.html","page":"Uploaders","title":"Uploaders","text":"uploader","category":"page"},{"location":"api/scrollareas.html","page":"ScrollAreas","title":"ScrollAreas","text":"CurrentModule = ScrollAreas","category":"page"},{"location":"api/scrollareas.html","page":"ScrollAreas","title":"ScrollAreas","text":"","category":"page"},{"location":"api/scrollareas.html","page":"ScrollAreas","title":"ScrollAreas","text":"scrollarea","category":"page"},{"location":"api/tables.html","page":"Tables","title":"Tables","text":"CurrentModule = Tables","category":"page"},{"location":"api/tables.html","page":"Tables","title":"Tables","text":"","category":"page"},{"location":"api/tables.html","page":"Tables","title":"Tables","text":"Column\nDataTablePagination\nDataTableOptions\nDataTable\nactive_columns\ncolumns\nrows\ndata\ntable\nStipple.render\nStipple.watch\nBase.parse","category":"page"},{"location":"api/tables.html#Stipple.watch","page":"Tables","title":"Stipple.watch","text":"`function watch`\n\nAbstract function. Can be used by plugins to define custom Vue.js watch functions.\n\n\n\n\n\n","category":"function"},{"location":"api/bignumbers.html","page":"BigNumbers","title":"BigNumbers","text":"CurrentModule = BigNumbers","category":"page"},{"location":"api/bignumbers.html","page":"BigNumbers","title":"BigNumbers","text":"","category":"page"},{"location":"api/bignumbers.html","page":"BigNumbers","title":"BigNumbers","text":"bignumber","category":"page"},{"location":"api/bignumbers.html#StippleUI.BigNumbers.bignumber","page":"BigNumbers","title":"StippleUI.BigNumbers.bignumber","text":"bignumber(label::String = \"\",           number::Union{Symbol,Number,Nothing} = nothing,           args...;           kwargs...)\n\nRenders a Big Number UI element.\n\nArguments\n\nlabel::Union{String,Symbol}\nnumber::Union{String,Symbol,Nothing,String}\nicon::Union{String,Symbol}\ncolor::Union{String,Symbol} = \"positive\"|\"negative\"\narrow::Union{String,Symbol} = \"up\"|\"down\"\n\n\n\n\n\n","category":"function"},{"location":"api/radios.html","page":"Radios","title":"Radios","text":"CurrentModule = Radios","category":"page"},{"location":"api/radios.html","page":"Radios","title":"Radios","text":"","category":"page"},{"location":"api/radios.html","page":"Radios","title":"Radios","text":"radio","category":"page"},{"location":"api/layouts.html","page":"Layouts","title":"Layouts","text":"CurrentModule = Layouts","category":"page"},{"location":"api/layouts.html","page":"Layouts","title":"Layouts","text":"","category":"page"},{"location":"api/layouts.html","page":"Layouts","title":"Layouts","text":"layout\npage_container\npage","category":"page"},{"location":"api/datepickers.html","page":"DatePickers","title":"DatePickers","text":"CurrentModule = DatePickers","category":"page"},{"location":"api/datepickers.html","page":"DatePickers","title":"DatePickers","text":"","category":"page"},{"location":"api/datepickers.html","page":"DatePickers","title":"DatePickers","text":"DateRange\ndatepicker\nDatePicker\nDates.parse\nStipple.render\nBase.convert","category":"page"},{"location":"api/datepickers.html#StippleUI.DatePickers.DateRange","page":"DatePickers","title":"StippleUI.DatePickers.DateRange","text":"DateRange\n\nRepresents a date interval, between start and stop, with a 1 day step.\n\n\n\n\n\n","category":"type"},{"location":"api/datepickers.html#StippleUI.DatePickers.datepicker","page":"DatePickers","title":"StippleUI.DatePickers.datepicker","text":"datepicker()\n\nRenders a date picker (calendar) input element. If the fieldname references a Vector{Date}, the multiple keyword parameter must be passed as true. If the fieldname references a DateRange, the range keyword parameter must be passed as true. If the fieldname references a Vector{DateRange}, both the multiple and the range keyword parameters must be passed as true.\n\n\n\n\n\n","category":"function"},{"location":"api/datepickers.html#Base.parse","page":"DatePickers","title":"Base.parse","text":"parse(type, str; base)\n\nParse a string as a number. For Integer types, a base can be specified (the default is 10). For floating-point types, the string is parsed as a decimal floating-point number.  Complex types are parsed from decimal strings of the form \"RÂ±Iim\" as a Complex(R,I) of the requested type; \"i\" or \"j\" can also be used instead of \"im\", and \"R\" or \"Iim\" are also permitted. If the string does not contain a valid number, an error is raised.\n\ncompat: Julia 1.1\nparse(Bool, str) requires at least Julia 1.1.\n\nExamples\n\njulia> parse(Int, \"1234\")\n1234\n\njulia> parse(Int, \"1234\", base = 5)\n194\n\njulia> parse(Int, \"afc\", base = 16)\n2812\n\njulia> parse(Float64, \"1.2e-3\")\n0.0012\n\njulia> parse(Complex{Float64}, \"3.2e-1 + 4.5im\")\n0.32 + 4.5im\n\n\n\n\n\nparse(::Type{Platform}, triplet::AbstractString)\n\nParses a string platform triplet back into a Platform object.\n\n\n\n\n\nparse(Colorant, desc)\n\nParse a color description.\n\nThis parses a subset of HTML/CSS color specifications. In particular, everything is supported but: currentColor.\n\nIt does support named colors (though it uses X11 named colors, which are slightly different than W3C named colors in some cases), rgb(), hsl(), #RGB, and #RRGGBB syntax.\n\nArguments\n\nColorant: literal Colorant\ndesc: color name or description\n\nA literal Colorant will parse according to the desc string (usually returning an RGB); any more specific choice will return a color of the specified type.\n\nReturns\n\nan RGB{N0f8} color, or\nan HSL color if hsl(h, s, l) was used\nan RGBA color if rgba(r, g, b, a) was used\nan HSLA color if hsla(h, s, l, a) was used\nan ARGB{N0f8} color if 0xAARRGGBB/0xARGB was used\na specific Colorant type as specified in the first argument\n\nnote: Note for X11 named colors\nThe X11 color names with spaces (e.g. \"sea green\") are not recommended because they are not allowed in the SVG/CSS.\n\nnote: Note for hex notations\nYou can parse not only the CSS-style hex notations #RRGGBB/#RGB, but also 0xRRGGBB/0xRGB.You can also parse the 8-digit or 4-digit hex notation into an RGB color with alpha. However, the result depends on the prefix (i.e. # or 0x).julia> parse(Colorant, \"#FF8800AA\") # transparent orange\nRGBA{N0f8}(1.0,0.533,0.0,0.667)\n\njulia> parse(Colorant, \"0xFF8800AA\") # opaque purple\nARGB{N0f8}(0.533,0.0,0.667,1.0)\n\n\n\n\n\n","category":"function"},{"location":"api/datepickers.html#Stipple.render","page":"DatePickers","title":"Stipple.render","text":"`function render`\n\nAbstract function. Needs to be specialized by plugins. It is automatically invoked by Stipple to serialize a Julia data type (corresponding to the fields in the ReactiveModel instance) to JavaScript/JSON. In general the specialized methods should return a Julia Dict which are automatically JSON encoded by Stipple. If custom JSON serialization is required for certain types in the resulting Dict, specialize JSON.lower for that specific type.\n\nExample\n\nfunction Stipple.render(ps::PlotSeries, fieldname::Union{Symbol,Nothing} = nothing)\n  Dict(:name => ps.name, ps.plotdata.key => ps.plotdata.data)\nend\n\nSpecialized JSON rendering for Undefined\n\nJSON.lower(x::Undefined) = \"__undefined__\"\n\n\n\n\n\n","category":"function"},{"location":"api/datepickers.html#Base.convert","page":"DatePickers","title":"Base.convert","text":"convert(T, x)\n\nConvert x to a value of type T.\n\nIf T is an Integer type, an InexactError will be raised if x is not representable by T, for example if x is not integer-valued, or is outside the range supported by T.\n\nExamples\n\njulia> convert(Int, 3.0)\n3\n\njulia> convert(Int, 3.5)\nERROR: InexactError: Int64(3.5)\nStacktrace:\n[...]\n\nIf T is a AbstractFloat or Rational type, then it will return the closest value to x representable by T.\n\njulia> x = 1/3\n0.3333333333333333\n\njulia> convert(Float32, x)\n0.33333334f0\n\njulia> convert(Rational{Int32}, x)\n1//3\n\njulia> convert(Rational{Int64}, x)\n6004799503160661//18014398509481984\n\nIf T is a collection type and x a collection, the result of convert(T, x) may alias all or part of x.\n\njulia> x = Int[1, 2, 3];\n\njulia> y = convert(Vector{Int}, x);\n\njulia> y === x\ntrue\n\nSee also: round, trunc, oftype, reinterpret.\n\n\n\n\n\n","category":"function"},{"location":"api/lists.html","page":"Lists","title":"Lists","text":"CurrentModule = Lists","category":"page"},{"location":"api/lists.html","page":"Lists","title":"Lists","text":"","category":"page"},{"location":"api/lists.html","page":"Lists","title":"Lists","text":"list\nitem\nitem_section\nitemsection\nitem_label\nitemlabel","category":"page"},{"location":"api/knobs.html","page":"Knobs","title":"Knobs","text":"CurrentModule = Knobs","category":"page"},{"location":"api/knobs.html","page":"Knobs","title":"Knobs","text":"","category":"page"},{"location":"api/knobs.html","page":"Knobs","title":"Knobs","text":"knob","category":"page"},{"location":"api/knobs.html#StippleUI.Knobs.knob","page":"Knobs","title":"StippleUI.Knobs.knob","text":"knob()\n\nRenders a knob input element.\n\n\n\n\n\n","category":"function"},{"location":"api/popupproxies.html","page":"PopupProxies","title":"PopupProxies","text":"CurrentModule = PopupProxies","category":"page"},{"location":"api/popupproxies.html","page":"PopupProxies","title":"PopupProxies","text":"","category":"page"},{"location":"api/popupproxies.html","page":"PopupProxies","title":"PopupProxies","text":"popup_proxy\nPopupProxy\nBase.string","category":"page"},{"location":"api/popupproxies.html#StippleUI.PopupProxies.popup_proxy","page":"PopupProxies","title":"StippleUI.PopupProxies.popup_proxy","text":"popup_proxy()\n\nRenders a popup.\n\n\n\n\n\n","category":"function"},{"location":"api/popupproxies.html#Base.string","page":"PopupProxies","title":"Base.string","text":"string(n::Integer; base::Integer = 10, pad::Integer = 1)\n\nConvert an integer n to a string in the given base, optionally specifying a number of digits to pad to.\n\nSee also digits, bitstring, count_zeros.\n\nExamples\n\njulia> string(5, base = 13, pad = 4)\n\"0005\"\n\njulia> string(-13, base = 5, pad = 4)\n\"-0023\"\n\n\n\n\n\nstring(xs...)\n\nCreate a string from any values using the print function.\n\nstring should usually not be defined directly. Instead, define a method print(io::IO, x::MyType). If string(x) for a certain type needs to be highly efficient, then it may make sense to add a method to string and define print(io::IO, x::MyType) = print(io, string(x)) to ensure the functions are consistent.\n\nSee also: String, repr, sprint, show.\n\nExamples\n\njulia> string(\"a\", 1, true)\n\"a1true\"\n\n\n\n\n\n","category":"function"},{"location":"api/selects.html","page":"Selects","title":"Selects","text":"CurrentModule = Selects","category":"page"},{"location":"api/selects.html","page":"Selects","title":"Selects","text":"","category":"page"},{"location":"api/selects.html","page":"Selects","title":"Selects","text":"select","category":"page"},{"location":"api/menus.html","page":"Menus","title":"Menus","text":"CurrentModule = Menus","category":"page"},{"location":"api/menus.html","page":"Menus","title":"Menus","text":"","category":"page"},{"location":"api/menus.html","page":"Menus","title":"Menus","text":"menu","category":"page"},{"location":"api/badges.html","page":"Badges","title":"Badges","text":"CurrentModule = Badges","category":"page"},{"location":"api/badges.html","page":"Badges","title":"Badges","text":"","category":"page"},{"location":"api/badges.html","page":"Badges","title":"Badges","text":"badge\nBadge","category":"page"},{"location":"api/badges.html#StippleUI.Badges.badge","page":"Badges","title":"StippleUI.Badges.badge","text":"floating::Bool = false transparent::Bool = false multiline::Bool = true label::String = \"Label\" align::String = \"top\" # middle, bottom outline::Bool = true color::String = \"blue\" textcolor::String = \"teal-10\"\n\n\n\n\n\n","category":"function"},{"location":"api/spaces.html","page":"Spaces","title":"Spaces","text":"CurrentModule = Spaces","category":"page"},{"location":"api/spaces.html","page":"Spaces","title":"Spaces","text":"","category":"page"},{"location":"api/spaces.html","page":"Spaces","title":"Spaces","text":"space","category":"page"},{"location":"api/checkboxes.html","page":"Checkboxes","title":"Checkboxes","text":"CurrentModule = Checkboxes","category":"page"},{"location":"api/checkboxes.html","page":"Checkboxes","title":"Checkboxes","text":"","category":"page"},{"location":"api/checkboxes.html","page":"Checkboxes","title":"Checkboxes","text":"checkbox","category":"page"},{"location":"api/dashboards.html","page":"Dashboards","title":"Dashboards","text":"CurrentModule = Dashboards","category":"page"},{"location":"api/dashboards.html","page":"Dashboards","title":"Dashboards","text":"","category":"page"},{"location":"api/dashboards.html","page":"Dashboards","title":"Dashboards","text":"dashboard","category":"page"},{"location":"api/buttons.html","page":"Buttons","title":"Buttons","text":"CurrentModule = Buttons","category":"page"},{"location":"api/buttons.html","page":"Buttons","title":"Buttons","text":"","category":"page"},{"location":"api/buttons.html","page":"Buttons","title":"Buttons","text":"btn\nBtn\nbtngroup","category":"page"},{"location":"api/editors.html","page":"Editors","title":"Editors","text":"CurrentModule = Editors","category":"page"},{"location":"api/editors.html","page":"Editors","title":"Editors","text":"","category":"page"},{"location":"api/editors.html","page":"Editors","title":"Editors","text":"editor","category":"page"},{"location":"api/editors.html#StippleUI.Editors.editor","page":"Editors","title":"StippleUI.Editors.editor","text":"editor(fieldname, args...; kwargs...)\n\nCreates a Quasar editor view editing the content stored in the fieldname property of the model.\n\nSome optional arguments are:     definitions : A dict or list of toolbar command descriptions     toolbar: A dict or list describing the arrangement of the toolbar elements     autocorrect: \"on/off\", whever to activate autocorrect     autocapitalize: \"on/off\"     autocomplete: \"on/off     spellcheck: \"true/false\"\n\n\n\n\n\n","category":"function"},{"location":"api/ranges.html","page":"Ranges","title":"Ranges","text":"CurrentModule = Ranges","category":"page"},{"location":"api/ranges.html","page":"Ranges","title":"Ranges","text":"","category":"page"},{"location":"api/ranges.html","page":"Ranges","title":"Ranges","text":"RangeData\nBase.range\nslider\nStipple.render\nBase.parse","category":"page"},{"location":"api/ranges.html#Base.range","page":"Ranges","title":"Base.range","text":"range(start, stop, length)\nrange(start, stop; length, step)\nrange(start; length, stop, step)\nrange(;start, length, stop, step)\n\nConstruct a specialized array with evenly spaced elements and optimized storage (an AbstractRange) from the arguments. Mathematically a range is uniquely determined by any three of start, step, stop and length. Valid invocations of range are:\n\nCall range with any three of start, step, stop, length.\nCall range with two of start, stop, length. In this case step will be assumed\n\nto be one. If both arguments are Integers, a UnitRange will be returned.\n\nExamples\n\njulia> range(1, length=100)\n1:100\n\njulia> range(1, stop=100)\n1:100\n\njulia> range(1, step=5, length=100)\n1:5:496\n\njulia> range(1, step=5, stop=100)\n1:5:96\n\njulia> range(1, 10, length=101)\n1.0:0.09:10.0\n\njulia> range(1, 100, step=5)\n1:5:96\n\njulia> range(stop=10, length=5)\n6:10\n\njulia> range(stop=10, step=1, length=5)\n6:1:10\n\njulia> range(start=1, step=1, stop=10)\n1:1:10\n\nIf length is not specified and stop - start is not an integer multiple of step, a range that ends before stop will be produced.\n\njulia> range(1, 3.5, step=2)\n1.0:2.0:3.0\n\nSpecial care is taken to ensure intermediate values are computed rationally. To avoid this induced overhead, see the LinRange constructor.\n\ncompat: Julia 1.1\nstop as a positional argument requires at least Julia 1.1.\n\ncompat: Julia 1.7\nThe versions without keyword arguments and start as a keyword argument require at least Julia 1.7.\n\n\n\n\n\n","category":"function"},{"location":"api/dialogs.html","page":"Dialogs","title":"Dialogs","text":"CurrentModule = Dialogs","category":"page"},{"location":"api/dialogs.html","page":"Dialogs","title":"Dialogs","text":"","category":"page"},{"location":"api/dialogs.html","page":"Dialogs","title":"Dialogs","text":"dialog","category":"page"},{"location":"api/chips.html","page":"Chips","title":"Chips","text":"CurrentModule = Chips","category":"page"},{"location":"api/chips.html","page":"Chips","title":"Chips","text":"","category":"page"},{"location":"api/chips.html","page":"Chips","title":"Chips","text":"chip","category":"page"},{"location":"api/banners.html","page":"Banners","title":"Banners","text":"CurrentModule = Banners","category":"page"},{"location":"api/banners.html","page":"Banners","title":"Banners","text":"","category":"page"},{"location":"api/banners.html","page":"Banners","title":"Banners","text":"banner","category":"page"},{"location":"api/drawers.html","page":"Drawers","title":"Drawers","text":"CurrentModule = Drawers","category":"page"},{"location":"api/drawers.html","page":"Drawers","title":"Drawers","text":"","category":"page"},{"location":"api/drawers.html","page":"Drawers","title":"Drawers","text":"drawer","category":"page"},{"location":"api/intersections.html","page":"Intersections","title":"Intersections","text":"CurrentModule = Intersections","category":"page"},{"location":"api/intersections.html","page":"Intersections","title":"Intersections","text":"","category":"page"},{"location":"api/intersections.html","page":"Intersections","title":"Intersections","text":"intersection","category":"page"},{"location":"api/API.html","page":"API","title":"API","text":"CurrentModule = API","category":"page"},{"location":"api/API.html","page":"API","title":"API","text":"","category":"page"},{"location":"api/API.html","page":"API","title":"API","text":"ATTRIBUTES_MAPPINGS\nattributes\nq__elem\nxelem\nquasar\nvue\nxelem_pure\nquasar_pure\nvue_pure\ncsscolors","category":"page"},{"location":"api/API.html#StippleUI.API.csscolors","page":"API","title":"StippleUI.API.csscolors","text":"`csscolors(name, color)`\n`csscolors(names, colors)`\n`csscolors(prefix, colors)`\n\nConstruct a css string that defines colors to be used for styling quasar elements.\n\nUsage\n\ncss = styles(csscolors(:stipple, [RGB(0.2, 0.4, 0.8), \"#123456\", RGBA(0.1, 0.2, 0.3, 0.5)]))\n\nui() = css * dashboard(vm(model), class=\"container\", [   btn(\"Hit me\", @click(:pressed), color=\"stipple-3\") ])\n\n\n\n\n\n","category":"function"},{"location":"api/cards.html","page":"Cards","title":"Cards","text":"CurrentModule = Cards","category":"page"},{"location":"api/cards.html","page":"Cards","title":"Cards","text":"","category":"page"},{"location":"api/cards.html","page":"Cards","title":"Cards","text":"card\ncard_section\ncard_actions","category":"page"},{"location":"api/innerloaders.html","page":"InnerLoaders","title":"InnerLoaders","text":"CurrentModule = InnerLoaders","category":"page"},{"location":"api/innerloaders.html","page":"InnerLoaders","title":"InnerLoaders","text":"","category":"page"},{"location":"api/innerloaders.html","page":"InnerLoaders","title":"InnerLoaders","text":"innerloader","category":"page"},{"location":"api/toggles.html","page":"Toggles","title":"Toggles","text":"CurrentModule = Toggles","category":"page"},{"location":"api/toggles.html","page":"Toggles","title":"Toggles","text":"","category":"page"},{"location":"api/toggles.html","page":"Toggles","title":"Toggles","text":"toggle","category":"page"},{"location":"api/forminputs.html","page":"FormInputs","title":"FormInputs","text":"CurrentModule = FormInputs","category":"page"},{"location":"api/forminputs.html","page":"FormInputs","title":"FormInputs","text":"","category":"page"},{"location":"api/forminputs.html","page":"FormInputs","title":"FormInputs","text":"textfield\nnumberfield\ntextarea\nfilefield","category":"page"},{"location":"api/forms.html","page":"Forms","title":"Forms","text":"CurrentModule = Forms","category":"page"},{"location":"api/forms.html","page":"Forms","title":"Forms","text":"","category":"page"},{"location":"api/forms.html","page":"Forms","title":"Forms","text":"form","category":"page"},{"location":"api/headings.html","page":"Headings","title":"Headings","text":"CurrentModule = Headings","category":"page"},{"location":"api/headings.html","page":"Headings","title":"Headings","text":"","category":"page"},{"location":"api/headings.html","page":"Headings","title":"Headings","text":"heading","category":"page"},{"location":"api/icons.html","page":"Icons","title":"Icons","text":"CurrentModule = Icons","category":"page"},{"location":"api/icons.html","page":"Icons","title":"Icons","text":"","category":"page"},{"location":"api/icons.html","page":"Icons","title":"Icons","text":"icon","category":"page"},{"location":"index.html#StippleUI","page":"Home","title":"StippleUI","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"StippleUI provides a collection of over 25 professional (web) UI elements, ready to implement in your Stipple app.","category":"page"}]
}
